---
const { headings } = Astro.props;

function buildToc(headings) {
  const toc = [];
  const parentHeadings = new Map();
  
  headings.forEach((h) => {
    const heading = {
      ...h,
      subheadings: [],
    };
    
    if (h.depth === 2) {
      toc.push(heading);
      parentHeadings.set(h.depth, heading);
    } else if (h.depth === 3) {
      parentHeadings.get(2)?.subheadings.push(heading);
    }
  });
  
  return toc;
}

const toc = buildToc(headings);
---

<nav class="toc">
  <h2>Table of Contents</h2>
  <ul>
    {toc.map(heading => (
      <li>
        <a href={`#${heading.slug}`} class="toc-link">{heading.text}</a>
        {heading.subheadings.length > 0 && (
          <ul>
            {heading.subheadings.map(subheading => (
              <li>
                <a href={`#${subheading.slug}`} class="toc-link">{subheading.text}</a>
              </li>
            ))}
          </ul>
        )}
      </li>
    ))}
  </ul>
</nav>

<script>
  // Handle smooth scrolling
  document.querySelectorAll('.toc-link').forEach(link => {
    link.addEventListener('click', (e) => {
      e.preventDefault();
      const targetId = link.getAttribute('href');
      const targetElement = document.querySelector(targetId);
      if (targetElement) {
        targetElement.scrollIntoView({ behavior: 'smooth' });
        // Update URL without jumping
        history.pushState(null, '', targetId);
      }
    });
  });

  // Highlight active section
  const observerOptions = {
    root: null,
    rootMargin: '0px',
    threshold: 0.5
  };

  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      const id = entry.target.getAttribute('id');
      const tocLink = document.querySelector(`.toc-link[href="#${id}"]`);
      
      if (entry.isIntersecting) {
        document.querySelectorAll('.toc-link').forEach(link => {
          link.classList.remove('active');
        });
        if (tocLink) {
          tocLink.classList.add('active');
        }
      }
    });
  }, observerOptions);

  // Observe all section headings
  document.querySelectorAll('h2, h3').forEach((heading) => {
    observer.observe(heading);
  });
</script>

<style>
  .toc {
    background: var(--surface0);
    padding: 1.5rem;
    border-radius: 8px;
    width: 100%;
    box-sizing: border-box;
    position: sticky;
    top: 6rem;
    z-index: 1;
  }
  
  .toc h2 {
    font-size: 1.2rem;
    margin: 0 0 1rem 0;
    color: var(--text);
  }
  
  .toc ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .toc ul ul {
    padding-left: 1.5rem;
    margin-top: 0.5rem;
  }
  
  .toc li {
    margin: 0.5rem 0;
  }
  
  .toc a {
    color: var(--subtext1);
    text-decoration: none;
    transition: all 0.2s;
    font-size: 0.9rem;
    display: block;
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
  }
  
  .toc a:hover {
    color: var(--text);
    background: var(--surface1);
  }

  .toc a.active {
    color: var(--text);
    background: var(--surface1);
    font-weight: 500;
    border-left: 2px solid var(--mauve);
    margin-left: -0.5rem;
    padding-left: calc(0.5rem - 2px);
  }
</style>